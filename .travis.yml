language: python
os: linux
dist: focal
addons:
  postgresql: "12"
  apt:
    packages:
      - postgresql-server-dev-12  # for postgresql-libversion
env:
  global:
    - REPOLOGY_CONFIG=repology-test.conf.default
cache: pip
jobs:
  include:
    - python: 3.9-dev
      env: COVERAGE=yes
    - python: nightly
  allow_failures:
    - python: nightly
before_install:
  - |-
    mkdir -p dep-libversion
    (
        cd dep-libversion &&
        wget -qO- https://github.com/repology/libversion/archive/master.tar.gz | tar -x -z -f- --strip-components 1 &&
        cmake . &&
        make &&
        sudo make install &&
        sudo ldconfig
    )
  - |-
    mkdir -p dep-html5-tidy
    (
        cd dep-html5-tidy
        wget -qO- https://github.com/htacg/tidy-html5/archive/master.tar.gz | tar -x -z -f- --strip-components 1 &&
        cmake . &&
        make &&
        sudo make install &&
        sudo ldconfig
    )
  - |-
    mkdir -p dep-postgresql-libversion
    (
        cd dep-postgresql-libversion &&
        wget -qO- https://github.com/repology/postgresql-libversion/archive/master.tar.gz | tar -x -z -f- --strip-components 1 &&
        make &&
        sudo make install
    )
  - pip install -r requirements-dev.txt
  - pip install codecov
before_script:
  - sudo -u postgres psql -c "CREATE DATABASE repology_test;"
  - sudo -u postgres psql -c "CREATE USER repology_test WITH PASSWORD 'repology_test'"
  - sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE repology_test TO repology_test"
  - sudo -u postgres psql -d repology_test -c "CREATE EXTENSION IF NOT EXISTS pg_trgm"
  - sudo -u postgres psql -d repology_test -c "CREATE EXTENSION IF NOT EXISTS libversion"
  - psql -U repology_test < testdata/repology_test.sql
  - echo "BADGE_FONT = '/usr/share/fonts/truetype/ttf-dejavu/DejaVuSans.ttf'" >> $REPOLOGY_CONFIG
  - echo "BADGE_FONT_BOLD = '/usr/share/fonts/truetype/ttf-dejavu/DejaVuSans-Bold.ttf'" >> $REPOLOGY_CONFIG
script:
  # test all target
  - make

  # check python syntax
  - make flake8

  # check python types
  - make mypy

  # run unit tests with coverage
  - coverage run --source=repologyapp --omit="repologyapp/test/*" -m unittest discover

after_success:
  - if [ -n "$COVERAGE" ]; then codecov; fi
